#include "global.inc"

layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec2 vertex_texcoord;
layout(location = 2) in vec3 vertex_normal;
layout(location = 3) in vec4 vertex_color;
layout(location = 4) in vec3 vertex_binormal;
layout(location = 5) in vec3 vertex_tangent;

out vs_output
{
  vec2 texcoord0;
  vec2 texcoord1;
} result;

void main(void)
{
  gl_Position = rpProjectionMatrix * rpModelViewMatrix * vec4(vertex_position, 1.0);  

  vec4 vertexPosition = vec4(vertex_position, 1.0);  
  
  //FIXME(johl): use real 4x4 texture matrices everywhere (instead of abusing partial bump, specular and diffuse matrix)!
  result.texcoord0.x = dot( vertexPosition, rpBumpMatrixS );
  result.texcoord0.y = dot( vertexPosition, rpBumpMatrixT );

  result.texcoord1.x = dot( vertexPosition, rpDiffuseMatrixS );
  result.texcoord1.y = dot( vertexPosition, rpDiffuseMatrixT );  
}
